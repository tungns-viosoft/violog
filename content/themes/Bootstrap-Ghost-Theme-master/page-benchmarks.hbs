{{!< default}}

{{!-- This is a page template. A page outputs content just like any other post, and has all the same
    attributes by default, but you can also customise it to behave differently if you prefer. --}}

{{!-- Everything inside the #post tags pulls data from the page --}}
{{#post}}

{{> "site-header"}}

<script type="text/javascript" src="{{asset "js/Chart.min.js"}}"></script> 
<script type="text/javascript" src="{{asset "js/pechart.js"}}"></script> 

<!-- <section class="container">
	<section class="row">
		<div class="col-md-3">
			
		</div>
	</section>
</section> -->


<section class="container" >
	<section class="row">
		<div class="col-md-10" >		

			<div class="chart-container">

				<div id="chart-container">
					
				</div>
				
			</div>
			
		</div>

		<div class="col-md-2" >
			<div class="side-bar" id="filter-container">
				<div class="filter filter-brand">
					<header class="filter-header">
						Hardware brand
					</header>
					<ul style="list-style: none;" class="filter-content" id="hardware-brand-filter-content">
					</ul>
				</div>

				<div class="filter filter-brand">
					<header class="filter-header">
						CPUs
					</header>
					<ul style="list-style: none;" class="filter-content" id="cpu-filter-content">
					</ul>
				</div>

				
			</div>
			
		</div>
	</section>

</section>


<script type="text/javascript">

	var database = {};
    var usecases = []; //usecase model to present data

    var canvases = {};
    var hardwareBrand = [];
    var cpus = [];

	var checkedBrand = [];
	var cpusChecked = [];

	$.get("http://192.168.0.220:1337/api/performance", function(data, status) {
        
        $.each(data, function(i, val){
            if(!usecases.includes(val.usecase)){
                usecases.push(val.usecase);
            }
            database[val.id] = val;

            if(!hardwareBrand.includes(val.vnf.hw.brand)){
            	hardwareBrand.push(val.vnf.hw.brand);
            	checkedBrand = hardwareBrand.slice();
            }

            if(!cpus.includes(val.vnf.hw.cpus)){
            	cpus.push(val.vnf.hw.cpus);
            	cpusChecked = cpus.slice();
            }

        });

        init(data[0].size);
        render();

        initFilter();
    });


	function initFilter(){

		var brandSelection = '';		
		var cpuSelection = '';

		$.each(hardwareBrand, function(i,val){
			var id = 'brandid-' + val;

			brandSelection += '<li><label><input type="checkbox" value="' + val +'" id="' + id + '"/> ' + val + '</label></li>';
		});

		$('#hardware-brand-filter-content').append(brandSelection);

		$.each(cpus, function(i,val){
			var id = 'cpuid-' + val;

			cpuSelection += '<li><label><input type="checkbox" value="' + val +'" id="' + id + '"/> ' + val + " cores" + '</label></li>';
		});

		$('#cpu-filter-content').append(cpuSelection);

	}


	$('#hardware-brand-filter-content').on('change','input',function(){

		// if(this.checked){
		// 	checkedBrand.push($(this).val());
		// } else {
		// 	checkedBrand.splice(checkedBrand.indexOf($(this).val()), 1);
		// }
		checkedBrand = [];
		$('#hardware-brand-filter-content input').each(function(){
			if(this.checked){
				checkedBrand.push($(this).val());
			}
		});
		if(checkedBrand.length === 0){
			checkedBrand = hardwareBrand.slice();
		}
		console.log(checkedBrand);

		refreshChartContainer();

	});


	$('#cpu-filter-content').on('change','input',function(){

		cpusChecked = [];
		$('#cpu-filter-content input').each(function(){
			if(this.checked){
				cpusChecked.push(Number($(this).val()));
			}
		});
		if(cpusChecked.length === 0){
			cpusChecked = cpus.slice();
		}
		refreshChartContainer();

	});


	function refreshChartContainer(){
		if(checkedBrand.length <= 0 && cpusChecked.length <= 0){
			$('div.row-chart').each(function(i, val){
				// $(this).css('display', 'block');
				$(this).show();
			});
		} else {
			$('div.row-chart').each(function(i, val){

				var id = $(this).attr('value');

				if( checkedBrand.includes(database[id].vnf.hw.brand) 
					&& cpusChecked.includes(database[id].vnf.hw.cpus)){


					$(this).fadeIn(500,function(){
						$(this).show();
					});

					// $(this).css('display', 'block');
					// $(this).removeClass('fadein');		
					// $(this).addClass('fadeout');
				} else {
					$(this).fadeOut(500,function(){
						$(this).hide();
					});

					// $(this).css('display', 'none');
					// $(this).removeClass('fadeout');					
					// $(this).addClass('fadein');
				}

			});
		}
	}



	function render(){

		var container = $('#chart-container');
		container.empty();

		$.each(database, function(i, val){
			var canvasId = 'canvas-' + i;


			var chartPanel = '<div class="chart-pos">'
			+ '<canvas class="chart-canvas" id="' + canvasId +  '" />'
			+ '</div>';

			var chartInfo = '<div class="table-pos">' 			
			+ '<table class="info-table info-hardware">'
			+ '<tr>'
			+ '<th colspan="2">' + val.vnfname + '</th>'
			+ '</tr>'
			+ '<tr>'
			+ '<td class="group-label" colspan="2"  style="font-weight:600">Hardware</th>'
			+ '</tr>';


			$.each(val.vnf.hw, function(i,val1){
				chartInfo += '<tr>'
				+ '<td class="item-label ">'

				+	i
				
				+ '</td>'
				+ '<td class="item-value">'

				+ 	val1
				
				+ '</td>'
				+ '</tr>'
			});
		
			// chartInfo += '</table>'
			// + '</div>';

			chartInfo += '<tr>'
			+ '<td colspan="2" style="font-weight:600">Software</th>'
			+ '</tr>';

			$.each(val.vnf.sw, function(i,val2){
				chartInfo += '<tr>'
				+ '<td  class="item-label">'

				+	val2.name
				
				+ '</td>'
				+ '<td  class="item-value">'

				+ 	val2.version
				
				+ '</td>'
				+ '</tr>'
			});		

			chartInfo += '</table>'
			+ '</div>';


			var chartRow = '<div class="row-chart" value="' + i + '"> ' 
			+ chartPanel 
			+ chartInfo
			+ '</div>';

			var $chartRow = $(chartRow).hide().fadeIn(1000);
			
			container.append($chartRow);



			val.canvas = canvasId;
			var myChart = loadChart(canvasId,'session ' + val.session);
			addChart(val, myChart);

			val.chart = myChart;
			// canvases[chartRowId] = myChart;
		});

		//$('#canvas-2').closest('div.row-chart-benchmarks').css('display', 'none');
	}


	// $('#chart-type-selector').change(function(){
	// 	var selected = $('option:selected', this);

	// 	switch(selected.val()){
	// 		case 'line':
	// 			$.each(database, function(i, val){
	// 				val.chart.config.type = 'line';
	// 				val.chart.update();


	// 				// var myChart = loadChart(val.canvas,'session ' + val.session, 'line');
	// 				// addChart(val, myChart);
	// 				// val.chart = myChart;
	// 				// val.chart.update();
	// 			});
	// 		break;

	// 		case  'bar':
	// 			$.each(database, function(i, val){
	// 				val.chart.config.type = 'bar';				
	// 				val.chart.update();

	// 				// var myChart = loadChart(val.canvas,'session ' + val.session, 'bar');
	// 				// addChart(val, myChart);
	// 				// val.chart = myChart;
	// 				// val.chart.update();
	// 			});
	// 		break;

	// 		default:
	// 			break;
	// 	}

	// });

	

</script>


{{/post}}


